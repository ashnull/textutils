{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","abouttext","onClick","toggleMode","for","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","defaultProps","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","message","setAlert","setTimeout","setMode","document","body","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.14ec687d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) { \r\n    return (\r\n    \r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" \r\n          aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n             \r\n              <li className=\"nav-item\">\r\n\r\n                <a className=\"nav-link active\" aria-current=\"page\"  href=\"#\">Home</a>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n              \r\n                <a className=\"nav-link\" href= \"#\">{props.abouttext}</a>\r\n                \r\n             </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n          {/* <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"from-chck-input\" onClick={props.toggleMode} type=\"chckbox\" id=\"flexSwitchCheckboxDefault\"/>\r\n              <label className=\"from-check-label\" htmlFor=\"flexSwitchCheckboxDefault\">Enable Dark Mode</label>\r\n            </div> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div> \r\n       </div>\r\n       </div>\r\n      </nav>\r\n    \r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n                     title:PropTypes.string,\r\n                     abouttext:PropTypes.string }\r\n\r\n                     Navbar.defaultProps = {\r\n                         title:'Set Text here',\r\n                         abouttext:'About'\r\n                     }\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = () =>{ \r\n        //  console.log(\"uppercase was clicked\");\r\n         let newText = text.toUpperCase();\r\n         setText(newText); \r\n         props.showAlert(\"Converted to uppercase!\",\"success\");\r\n         }\r\n         const handleloClick = () =>{\r\n             let newText = text.toLowerCase();\r\n             setText(newText);\r\n             props.showAlert(\"Converted to lowercase!\",\"success\");\r\n         }\r\n    const handleOnChange =(event) =>{\r\n        //    console.log(\"On change\");\r\n           setText(event.target.value);\r\n    }\r\n    const clrs = () => {\r\n          setText('');\r\n          props.showAlert(\"Text Cleard !\",\"success\");\r\n\r\n    }\r\n\r\n        const [text,setText] = useState('');\r\n    return (\r\n\r\n        <>\r\n        <div className = \"container\" id=\"bt_style\" style ={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h1>{props.heading}</h1>            \r\n            <div className=\"mb-3\">\r\n            {/* <label htmlfor=\"myBox\" className=\"form-label\">Example textarea</label> */}\r\n            <textarea className=\"form-control\" value={text} onChange = {handleOnChange}  style ={{backgroundColor: props.mode==='dark'?'#a1abde':'white', color:   props.mode==='dark'?'white':'#042743'}}id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n     <div className=\"d-flex align-content-between flex-wrap\">\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}> Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleloClick}> Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={clrs}> Clear Text</button>\r\n    </div>\r\n     \r\n            {/* <a href = \"newText.txt\" download>\r\n            <button className=\"btn btn-dark mx-1\"> Download</button>        \r\n            </a> */}\r\n        </div>\r\n        <div className=\"container\" style ={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary is here</h2>\r\n            <p> <b>{text.split(\" \").length-1} </b> words and <b>{text.length}</b> characters</p>\r\n            <p> <b>{0.008 * text.split(\" \").length}</b> Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize=(word)=>{ \r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n                        \r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                          <strong>{capitalize(props.alert.type)}</strong>  {props.alert.msg}\r\n                    </div>\r\n\r\n         \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState } from 'react'\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\n// import About from './Components/About';\nimport Alert from './Components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\nfunction App() {\n\n  const toggleMode = () => {\n      if(mode ==='light'){\n        setMode('dark');\n        document.body.style.background='#042743';\n        showAlert(\"Dark Mode Enabled\",\"success\");\n        document.title = \"TextUtils - Dark Mode\";\n        // setInterval(() => {\n        //    document.title = \"TextUtils is Amazing\";\n        // }, 2000);\n        // setInterval(() => {\n        //   document.title = \"Install TextUtils Now\";\n        // }, 1500);\n      }\n      else{\n        setMode('light');\n        document.body.style.background='white'; \n        showAlert(\"Dark Mode Disabled\",\"success\");\n        document.title = \"TextUtils - Light Mode\";\n      }\n  }\n  const showAlert =(message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n  }\n\n  const [ mode,setMode] = useState('light');\n  const [alert,setAlert] = useState(null);\n  \n  return (\n    \n  <>\n  \n {/* <Navbar/> */}\n   {/* <Navbar title =\"TextUtils\" abouttext=\"About Text Utils\"/> */}\n   {/* <Router> */}\n   <Navbar title =\"TextUtils\" mode = {mode} toggleMode={toggleMode}/>\n   \n   <Alert alert={alert}/> \n   <div className=\"container my-3\">\n{/*     \n              <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          \n          {/* <Route exact path=\"/\">\n          </Route>\n              </Switch> */}\n          <TextForm heading = \"Enter the text to analyze\" showAlert={showAlert} mode={mode}/>\n\n              </div>\n     {/* </Router> */}\n\n   \n  \n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}